package com.lynxanalytics.biggraph.graph_operations

import org.scalatest.FunSuite
import scala.reflect.runtime.universe._
import com.lynxanalytics.biggraph.graph_api._

object SerialVersionUIDTest {
  val heavyOperations = Map[Class[_], Long](
    // -- Autogenerated by tools/SerialVersionUIDTest-update. --
    classOf[AggregateAttributeToScalar[_, _, _]] -> 7208656520761268313L,
    classOf[AggregateByEdgeBundle[_, _]] -> 8719999071296108405L,
    classOf[AggregateFromEdges[_, _]] -> 8725903653158919492L,
    classOf[ClusteringCoefficient] -> 3177253271409242197L,
    classOf[ComputeMinMax[_]] -> 1549135883448499070L,
    classOf[ComputeTopValues[_]] -> 1834323312486184125L,
    classOf[ConcatenateBundles] -> 7420368674033831349L,
    classOf[ConnectedComponents] -> 3257130100921672332L,
    classOf[CountAttributes[_]] -> 8960917941651861480L,
    classOf[CountEdges] -> 8170094323718774821L,
    classOf[CountVertices] -> -1136363790372327808L,
    classOf[DeriveJSDouble] -> -79825253073657730L,
    classOf[DeriveJSString] -> -57011667786078744L,
    classOf[EdgeGraph] -> 2190722079771976554L,
    classOf[EdgesFromAttributeMatches[_]] -> 528502611584618653L,
    classOf[EdgesFromBipartiteAttributeMatches[_]] -> 2354393111550889521L,
    classOf[Embeddedness] -> -4737043471723109201L,
    classOf[ExampleGraph] -> 4582815398126925303L,
    classOf[FastRandomEdgeBundle] -> 5709373073785277167L,
    classOf[FindMaxCliques] -> -2730852947127951308L,
    classOf[FingerprintingCandidates] -> -6803153418047952554L,
    classOf[Fingerprinting] -> -4676710109227070240L,
    classOf[ImportEdgeListForExistingVertexSet] -> -9152054029750544761L,
    classOf[ImportEdgeList] -> 1634347504637883239L,
    classOf[ImportVertexList] -> 6404238484942071638L,
    classOf[InducedEdgeBundle] -> 6958564820221801672L,
    classOf[MergeVertices[_]] -> 3911193510499226299L,
    classOf[PageRank] -> 538445195079722930L,
    classOf[PulledOverEdges] -> 3312055770969936870L,
    classOf[PulledOverVertexAttribute[_]] -> -9102293292129400418L,
    classOf[RemoveNonSymmetricEdges] -> -7577483219841887068L,
    classOf[SetOverlap] -> -4758479303157055190L,
    classOf[TripletMapping] -> -2959603062547590401L,
    classOf[UniformOverlapForCC] -> 4155816908266025471L,
    classOf[VertexToEdgeAttribute[_]] -> 5077837805760054987L,
    classOf[VerticesToEdges] -> 7027490758182255062L)
  // -- Autogenerated by tools/SerialVersionUIDTest-update. --

  def assertContains(op: MetaGraphOp): Unit = {
    val c = op.getClass
    assert(heavyOperations.contains(c), {
      val params = typeParams(c)
      val name = c.getSimpleName + (if (params.isEmpty) "" else
        "[" + params.map(_ => "_").mkString(", ") + "]")
      s"Please add classOf[$name] -> ${svu(c)}L to SerialVersionUIDTest."
    })
  }

  def typeParams[T](c: Class[T]) = {
    val mirror = runtimeMirror(getClass.getClassLoader)
    val cs = mirror.classSymbol(c)
    cs.toType.asInstanceOf[TypeRefApi].args
  }

  def svu[T](c: Class[T]): Long = java.io.ObjectStreamClass.lookup(c).getSerialVersionUID
}

class SerialVersionUIDTest extends FunSuite {
  import SerialVersionUIDTest._
  test("serialVersionUID of heavy operations") {
    for ((op, golden) <- heavyOperations) {
      assert(svu(op) == golden)
    }
  }
}
