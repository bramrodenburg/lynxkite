## Scala guide

You can derive attributes in LynxKite by implementing the derivation formulas using Scala. For a
general introduction to the Scala language, see:
http://docs.scala-lang.org/tutorials/tour/tour-of-scala.html

### Getting started

The simplest way of using Scala to derive attributes is to just provide a one-liner expression
in <<derive-vertex-attribute>> or <<derive-edge-attribute>>. The examples below are for deriving
vertex attributes. The only difference from deriving edge attributes is the way vertex attributes can be
accessed.

A simple example:
```
6.0 * 7.0
```
will generate a constant Double attribute of value `42.0`. You can also use values of other attributes
in the expression:
```
6.0 * age
```
assuming that there is already an `age` attribute defined. LynxKite can also accept a list of
Scala expressions:
```
val x = age + 1.0
val y = num_friends + 2.0
y / x
```
In this case, the value of the last expression will be taken as the value of the derived attribute.
More complex code can be structured using functions:
```
def getAge() {
  age + 1.0
}
def getNumFriends() {
  num_friends + 2.0
}
getNumFriends() / getAge()
```

### Allowed types

LynxKite uses Scala data types internally, so there is no need for type conversion between LynxKite
and the derivations script. However, for performance and stability reasons the available types for
both input (the type of vertex and edge attributes the script can use) and result are restricted.

* Double
* String
* Int
* Long
* Any Vector combined from the above types

Values of other types need to be manually converted before returning from the Scala script.
For input types, you can use, for example, one of
<<convert-vertex-attribute-to-string>> or <<convert-vertex-attribute-to-double>>.
