## Union with another project

The resulting graph is just a disconnected graph containing the vertices and edges of
the two originating projects. All vertex and edge attributes are preserved. If an attribute
exists in both projects, it must have the same data type in both.

The resulting graph will have as many vertices as the sum of the vertex counts in the two
source graphs. The same with the edges.

To establish a connection between the two graphs, you can perform
<<fingerprinting based on attributes>> or <<merge vertices by attribute>>.

For example, you can import a call data graph in one project and a Facebook graph in another.
Then, after taking the union, you can merge vertices based on an ID, and then
use fingerprinting to figure out more connections based on neighborhood similarity.

====
[[other]] Other project's name::
The project to merge into the current project.

[[id-attr]] ID attribute name::
The internal vertex IDs change after the union. The old ID attributes are preserved, but no
longer reflect the internal IDs. The new internal IDs will be exposed through a new attribute.
This parameter sets the name of this new attribute.
====
