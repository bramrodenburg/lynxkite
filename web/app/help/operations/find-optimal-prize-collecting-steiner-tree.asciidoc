### Find optimal prize collecting Steiner tree

Given a graph in which (1) each vertex has an associated quantity, the "gain",
(2) each edge has an associated quantity, the "cost", and (3) one special vertex
is designated to be the "root", this operation will yield a tree subgraph of the graph
such that (1) the tree will contain the "root" vertex, and (2) the net gain
(which is the sum of all the gains minus the sum of all the costs) is maximal
of all the trees that contain the root vertex.


The operation will result in three outputs: (1) A new edge attribute, which will specify which
edges are part of the optimal solution. It will be 1.0 for edges that
are part of the optimal tree and 0.0 for edges that are not; (2) A new vertex
attribute, which will specify which vertices are part of the optimal solution.
It will be 1.0 for vertices that are part of the optimal tree and 0.0 for vertices that are not.
(3) A new scalar value that contains the net gain, that is, the total sum of the gains
minus the total sum of the costs. This value is guaranteed to be non-negative.

====
[p-ename]#Output edge attribute name#::
The new edge attribute will be created under this name.

[p-vname]#Output vertex attribute name#::
The new vertex attribute will be created under this name.

[p-pname]#The profit scalar variable#::
This new scalar variable will be created under this name.

[p-cost]#Cost attribute#::
This edge attribute specified here will determine the cost for including the
given edge in the solution tree.

[p-root]#Root point attribute#::
The vertex attribute specified here determines which vertex should be the
starting point (the root) of the tree. It must be 1.0 for exactly one vertex.

[p-gain]#Reward for reaching the vertex#::
This vertex attribute specifies the reward (gain) for including the given
vertex in the solution.

====
