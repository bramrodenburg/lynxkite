Operations('createrandom')
[
  {
    "path": [],
    "op": {
      "id": "New-vertex-set",
      "parameters": {
        "size": "1000000"
      }
    }
  },
  {
    "path": [],
    "op": {
      "id": "Create-scale-free-random-edge-bundle",
      "parameters": {
        "iterations": "5",
        "perIterationMultiplier": "1.6",
        "seed": "1571682864"
      }
    }
  },
  {
    "path": [],
    "op": {
      "id": "Add-constant-edge-attribute",
      "parameters": {
        "name": "weight",
        "value": "1",
        "type": "Double"
      }
    }
  },
  {
    "path": [],
    "op": {
      "id": "Export-edge-attributes-to-file",
      "parameters": {
        "path": "UPLOAD$/randomgraph",
        "link": "edges_csv",
        "attrs": "weight",
        "format": "CSV"
      }
    }
  }
]
EndOperations

Operations('loadandprocessrandom')
[
  {
    "path": [],
    "op": {
      "id": "Import-vertices-and-edges-from-single-CSV-fileset",
      "parameters": {
        "dst": "dstVertexId",
        "files": "UPLOAD$/randomgraph/data/part*",
        "filter": "",
        "src": "srcVertexId",
        "header": "srcVertexId,dstVertexId,weight",
        "omitted": "",
        "delimiter": ","
      }
    }
  },
  {
    "path": [],
    "op": {
      "id": "Degree",
      "parameters": {
        "name": "degree",
        "direction": "all edges"
      }
    }
  },
  {
    "path": [],
    "op": {
      "id": "Filter-by-attributes",
      "parameters": {
        "filterva-id": "",
        "filterva-degree": "<500",
        "filterea-dstVertexId": "",
        "filterva-stringID": "",
        "filterea-srcVertexId": "",
        "filterea-weight": ""
      }
    }
  },
  {
    "path": [],
    "op": {
      "id": "Find-infocom-communities",
      "parameters": {
        "cliques_name": "maximal_cliques",
        "communities_name": "communities",
        "adjacency_threshold": "0.6",
        "bothdir": "false",
        "min_cliques": "3"
      }
    }
  },
  {
    "path": ["communities"],
    "op": {
      "id": "Aggregate-to-segmentation",
      "parameters": {
        "aggregate-degree": "average",
        "aggregate-id": "",
        "aggregate-stringID": ""
      }
    }
  },
  {
    "path": ["communities"],
    "op": {
      "id": "Aggregate-from-segmentation",
      "parameters": {
        "prefix": "communities",
        "aggregate-degree_average": "max",
        "aggregate-id": "",
        "aggregate-size": ""
      }
    }
  },
  {
    "path": [],
    "op": {
      "id": "Derived-edge-attribute",
      "parameters": {
        "output": "highest_degree",
        "type": "double",
        "expr": "Math.max(src$degree, dst$degree)"
      }
    }
  },
  {
    "path": [],
    "op": {
      "id": "Aggregate-edge-attribute-globally",
      "parameters": {
        "prefix": "",
        "aggregate-srcVertexId": "",
        "aggregate-weight": "",
        "aggregate-highest_degree": "sum",
        "aggregate-dstVertexId": ""
      }
    }
  },
  {
    "path": [],
    "op": {
      "id": "Edge-attribute-to-double",
      "parameters": {
        "attr": "weight"
      }
    }
  },
  {
    "path": [],
    "op": {
      "id": "Aggregate-edge-attribute-globally",
      "parameters": {
        "prefix": "",
        "aggregate-srcVertexId": "",
        "aggregate-weight": "sum",
        "aggregate-highest_degree": "",
        "aggregate-dstVertexId": ""
      }
    }
  },
  {
    "path": [],
    "op": {
      "id": "Aggregate-vertex-attribute-globally",
      "parameters": {
        "aggregate-id": "",
        "aggregate-communities_degree_average_max": "std_deviation",
        "prefix": "",
        "aggregate-stringID": "",
        "aggregate-degree": ""
      }
    }
  }
]
EndOperations

GetScalar('loadandprocessrandom', 'vertex_count')
GetScalar('loadandprocessrandom', 'communities_degree_average_max_std_deviation')
GetScalar('loadandprocessrandom', 'highest_degree_sum')
GetScalar('loadandprocessrandom', 'weight_sum')
ResetTimer
