// Creates example data for a colocation problem.
project = lynx.newProject()
project.newVertexSet(size: '100000')
project.addRandomVertexAttribute(dist: 'Standard Uniform', name: 'timeRnd', seed: '-699856464')
project.addRandomVertexAttribute(dist: 'Standard Uniform', name: 'locationRnd', seed: '1065087263')
project.addRandomVertexAttribute(dist: 'Standard Uniform', name: 'personRnd', seed: '-196858015')
project.derivedVertexAttribute(expr: '"person"+(personRnd * 300).toFixed()', output: 'personId', type: 'string')
project.derivedVertexAttribute(expr: '(locationRnd * 300).toFixed()', output: 'locationId', type: 'string')
project.copyGraphIntoASegmentation(name: 'events')
project.mergeVerticesByAttribute('aggregate-id': '', 'aggregate-locationId': '', 'aggregate-locationRnd': '', 'aggregate-ordinal': '', 'aggregate-personId': '', 'aggregate-personRnd': '', 'aggregate-timeRnd': '', key: 'personId')
project.segmentations['events'].segmentByDoubleAttribute(attr: 'timeRnd', 'interval-size': '0.001', name: 'timeSeg', overlap: 'no')
project.segmentations['events'].segmentByStringAttribute(attr: 'locationId', name: 'locationSeg')
project.segmentations['events'].combineSegmentations(name: 'cellSeg', segmentations: 'locationSeg,timeSeg')
project.segmentations['events'].segmentations['cellSeg'].copySegmentationOneLevelUp()
project.segmentations['cellSeg'].createEdgesFromCoOccurrence()
project.copyGraphIntoASegmentation(name: 'golden')
project.discardEdges()
project.segmentations['golden'].discardLoopEdges()
project.segmentations['golden'].addConstantEdgeAttribute(name: 'weight', type: 'Double', value: '1')
project.segmentations['golden'].mergeParallelEdges('aggregate-cellSeg_id': '', 'aggregate-cellSeg_locationSeg_id': '', 'aggregate-cellSeg_locationSeg_locationId': '', 'aggregate-cellSeg_locationSeg_size': '', 'aggregate-cellSeg_size': '', 'aggregate-cellSeg_timeSeg_bottom': '', 'aggregate-cellSeg_timeSeg_id': '', 'aggregate-cellSeg_timeSeg_size': '', 'aggregate-cellSeg_timeSeg_top': '', 'aggregate-weight': 'sum')
project.segmentations['golden'].filterByAttributes('filterea-weight_sum': '> 1', 'filterva-id': '', 'filterva-personId': '')
project.saveAs('Colocation test data')
